/* Make the odd elements float left and the even elements float right. */
header>p {
 display: none;
}
header {
  background-color:gray;
  /* margin-bottom: 150px */
  /* overflow: auto  */
  /* This makes the whole header elements gray. *If this is not set * then if the 
  content of its child elememnt is short in 'height' then the color will be not applied to the wohle header. There are also some other values
  that can be se to this attribute. Like auto, hidden ...*/
 }
/* this block of code is == to the previus */
header::after {
  content: "";
  display: block; /*note this making the empty string block level*/
  clear: both; /*note this cleariing the floating affect on divs clear*/
 }

 header>div {
  padding: 25px;
 }
 header>div:nth-of-type(odd) {
  float: left;
  clear: left;
 }
 header>div:nth-of-type(even) {
  float: right;
  clear: right;
 }
 
/* make a dive float and warp its "content" around the dive */
header{
  width: 500px
}
header>div {
  padding: 25px;
  float: right;
}
 
/* Box sizing: to see how much space an element actually takes (not just its content) */
/* section{
    border: 2px solid rgb(231, 20, 12);
}  */

* { /*With this rule, all sizing attributes will include the padding and border.*/
    box-sizing: border-box;
   }
article {
    width: 300px;
    height: 60px;
    margin: 1px;
   
   }
   .bigBorder {
    padding: 30px;
    border: 10px solid rgb(0, 128, 38);
   }
   .smallBorder {
    padding: 5px;
    border: 2px solid rgb(9, 199, 158);
   }

/* keep the image caption  as wide as img element. 
This will make the width of caption == img tag width
*/
figure {
  border: 2px black solid;
  margin: 1px;
  width: -moz-max-content; /* this is only for the moz browser*/
  width: min-content;
}

/* Work around form IE to make the width of a dive "based on text width" */
.grandParent {
  border: none;
  margin: 0px;
  display: -ms-grid;
  -ms-grid-columns: min-content;
}

.contentBasedWidth-minContent {
  width: min-content;
  height: min-content;
  width: -moz-min-content;
  height: -moz-min-content;
  background: rgb(108, 129, 197);
}

/* content based "WIDHT" */
.contentBasedWidth {
  width: max-content;
  height: max-content;
  width: -moz-max-content;
  height: -moz-max-content;
  background: rgb(108, 129, 197);
}
/* how to fix vertical overrn remove Height attribute */
.noOverrun {
  max-width: 300px;
}
.noOverrun p {
  color: blue;
  padding: 3px;
}
/* Sizing in relative manner (also helpful when responsive style are needed */
.relativeSize {
  width: 70%;
  height: 70%;
}
/*Container overfling because of fixed width and height  */
.overFlowContainer {
  width: 150px;
  height: 100px;
}

/* givess border and space with full width*/
div,
span {
  border: 1px solid rgb(51, 15, 15);
  margin: 2px;
}

/*  gives width and color to a div having this class */
.container {
  border: 1px dashed sandybrown;
  padding: 3px;
  width: 450px;
  margin: auto;
}
.nestedContainer {
  border: 1px solid rgb(228, 15, 15);
  text-align: center;
  margin: 1px;
}
.container pre::after {
  content: " <== I am a block level dive with custom width ";
}
 
